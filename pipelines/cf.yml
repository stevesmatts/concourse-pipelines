---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: pipelines-repo
  type: git
  source:
    uri: https://github.com/trecnoc/concourse-pipelines.git
    branch: master
- name: cf-deployment
  type: github-release
  source:
    owner: cloudfoundry
    repository: cf-deployment
    access_token: ((github_access_token))
#- name: cf-deployment-additional
#  type: git
#  source:
#    uri: https://github.com/cloudfoundry/cf-deployment.git
#    branch: master
#    tag_filter: "v5.5.0"
- name: cf-mgmt-release
  type: github-release
  source:
    owner: pivotalservices
    repository: cf-mgmt
    access_token: ((github_access_token))
- name: cf-cli-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: cli
    access_token: ((github_access_token))
- name: cf-top-release
  type: github-release
  source:
    owner: ECSTeam
    repository: cloudfoundry-top-plugin
    access_token: ((github_access_token))
- name: buildpack-usage-release
  type: github-release
  source:
    owner: ECSTeam
    repository: buildpack-usage
    access_token: ((github_access_token))
- name: do-all-release
  type: github-release
  source:
    owner: ECSTeam
    repository: do-all
    access_token: ((github_access_token))
- name: stack-auditor-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: stack-auditor
    access_token: ((github_access_token))
- name: notify
  type: slack-notification
  source:
    url: ((slack_hook))
    disable: ((slack_disabled))

jobs:
- name: fetch-cf
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: cf-deployment
      trigger: true
      params:
        include_source_tarball: true
    - task: process-cf
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-deployment
        outputs:
        - name: releases
        run:
          path: pipelines-repo/scripts/process-cf-deployment-release.sh
          args:
          - pipelines-repo/scripts/fetch-bosh-releases-from-manifest.sh
          - cf-deployment
          - pipelines-repo/scripts/ops_files
          - releases
    - task: transfer-cf-releases
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: releases
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - releases
          - /data/repo/bosh/release
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new CF Deployment release
        silent: true
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new CF Deployment release
        silent: true
#- name: fetch-cf-additional
#  public: true
#  build_logs_to_retain: 1
#  plan:
#  - do:
#    - get: pipelines-repo
#    - get: cf-deployment-additional
#      trigger: true
#    - task: process-cf-additional
#      config:
#        platform: linux
#        image_resource:
#          type: docker-image
#          source: {repository: starkandwayne/concourse}
#        inputs:
#        - name: pipelines-repo
#        - name: cf-deployment-additional
#        outputs:
#        - name: releases
#        - name: stemcells
#        run:
#          path: pipelines-repo/scripts/process-cf-deployment-release-additional.sh
#          args:
#          - pipelines-repo/scripts/fetch-bosh-releases-from-manifest.sh
#          - cf-deployment-additional
#          - pipelines-repo/scripts/ops_files
#          - releases
#          - stemcells
#    - task: transfer-cf-releases-additional
#      config:
#        platform: linux
#        image_resource:
#          type: docker-image
#          source: {repository: trecnoc/concourse-rsync}
#        inputs:
#        - name: pipelines-repo
#        - name: releases
#        run:
#          path: pipelines-repo/scripts/rsync.sh
#          args:
#          - ((rsync_server))
#          - ((rsync_user))
#          - ((rsync_key_base64))
#          - releases
#          - /data/repo/bosh/release
#    - task: transfer-cf-stemcells-additional
#      config:
#        platform: linux
#        image_resource:
#          type: docker-image
#          source: {repository: trecnoc/concourse-rsync}
#        inputs:
#        - name: pipelines-repo
#        - name: stemcells
#        run:
#          path: pipelines-repo/scripts/rsync.sh
#          args:
#          - ((rsync_server))
#          - ((rsync_user))
#          - ((rsync_key_base64))
#          - stemcells
#          - /data/repo/bosh/stemcell
#    on_failure:
#      put: notify
#      params:
#        icon_emoji: ":skull_and_crossbones:"
#        text: Failed to process CF Deployment Additional release
#    on_success:
#      put: notify
#      params:
#        icon_emoji: ":thumbsup:"
#        text: Successfully processed CF Deployment Additional release
- name: fetch-cf-mgmt-cli
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: cf-mgmt-release
      trigger: true
      params:
        globs:
        - "*-linux"
    - task: process-cf-mgmt-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-mgmt-release
        outputs:
        - name: cf-mgmt-cli
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - cf-mgmt-release
          - cf-mgmt-cli
          - cf-mgmt
          - true
    - task: transfer-cf-mgmt-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: cf-mgmt-cli
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - cf-mgmt-cli
          - /data/repo/bosh
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new CF-MGMT CLI release
        silent: true
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new CF-MGMT CLI release
        silent: true
- name: fetch-cf-cli
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: cf-cli-release
      trigger: true
    - task: process-cf-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-cli-release
        outputs:
        - name: cf-cli
        run:
          path: pipelines-repo/scripts/process-cf-cli.sh
          args:
          - cf-cli-release
          - cf-cli
    - task: transfer-cf-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: cf-cli
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - cf-cli
          - /data/repo/cf_cli
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new CF CLI release
        silent: true
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new CF CLI release
        silent: true
- name: fetch-cf-top-plugin
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: cf-top-release
      trigger: true
      params:
        globs:
          - top-plugin-linux64
          - top-plugin64.exe
    - task: process-cf-top-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-top-release
        outputs:
        - name: cf-top-plugin
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - cf-top-release
          - cf-top-plugin
          - top
          - true
    - task: transfer-cf-top-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: cf-top-plugin
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - cf-top-plugin
          - /data/repo/cf_cli/plugins
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new CF Top CF CLI Plugin release
        silent: true
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new CF Top CF CLI Plugin release
        silent: true
- name: fetch-buildpack-usage-plugin
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: buildpack-usage-release
      trigger: true
      params:
        globs:
          - buildpack-usage-linux
          - buildpack-usage-windows.exe
    - task: process-buildpack-usage-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: buildpack-usage-release
        outputs:
        - name: buildpack-usage-plugin
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - buildpack-usage-release
          - buildpack-usage-plugin
          - buildpack-usage
          - true
    - task: transfer-buildpack-usage-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: buildpack-usage-plugin
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - buildpack-usage-plugin
          - /data/repo/cf_cli/plugins
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new Buildpack Usage CF CLI Plugin release
        silent: true
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new Buildpack Usage CF CLI Plugin release
        silent: true
- name: fetch-do-all-plugin
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: do-all-release
      trigger: true
      params:
        globs:
          - do-all-linux-amd64
          - do-all-windows-amd64.exe
    - task: process-do-all-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: do-all-release
        outputs:
        - name: do-all-plugin
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - do-all-release
          - do-all-plugin
          - do-all
          - true
    - task: transfer-do-all-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: do-all-plugin
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - do-all-plugin
          - /data/repo/cf_cli/plugins
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new Do-All CF CLI Plugin release
        silent: true
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new Do-All CF CLI Plugin release
        silent: true
- name: fetch-stack-auditor-plugin
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: stack-auditor-release
      trigger: true
      params:
        globs:
          - stack-auditor-*-linux.tgz
          - stack-auditor-*-windows.zip
    - task: process-stack-auditor-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: stack-auditor-release
        outputs:
        - name: stack-auditor-plugin
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - stack-auditor-release
          - stack-auditor-plugin
          - stack-auditor
          - true
    - task: transfer-stack-auditor-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: stack-auditor-plugin
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - stack-auditor-plugin
          - /data/repo/cf_cli/plugins
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new Stack Auditor CF CLI Plugin release
        silent: true
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new Stack Auditor CF CLI Plugin release
        silent: true
