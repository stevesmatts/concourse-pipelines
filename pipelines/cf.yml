---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: pipelines-repo
  type: git
  source:
    uri: https://github.com/trecnoc/concourse-pipelines.git
    branch: master
- name: cf-deployment
  type: github-release
  source:
    owner: cloudfoundry
    repository: cf-deployment
    access_token: ((github_access_token))
- name: cf-mgmt-release
  type: github-release
  source:
    owner: pivotalservices
    repository: cf-mgmt
    access_token: ((github_access_token))
- name: cf-cli-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: cli
    access_token: ((github_access_token))
- name: antifreeze-release
  type: github-release
  source:
    owner: odlp
    repository: antifreeze
    access_token: ((github_access_token))
- name: autopilot-release
  type: github-release
  source:
    owner: contraband
    repository: autopilot
    access_token: ((github_access_token))
- name: cf-bpck-mngt-release
  type: github-release
  source:
    owner: davidehringer
    repository: cf-buildpack-management-plugin
    access_token: ((github_access_token))
- name: cf-top-release
  type: github-release
  source:
    owner: ECSTeam
    repository: cloudfoundry-top-plugin
    access_token: ((github_access_token))
- name: notify
  type: slack-notification
  source:
    url: ((slack_hook))
    disable: ((slack_disabled))

jobs:
- name: fetch-cf
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: cf-deployment
      trigger: true
      params:
        include_source_tarball: true
    - task: process-cf
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-deployment
        outputs:
        - name: releases
        - name: stemcells
        run:
          path: pipelines-repo/scripts/process-cf-deployment-release.sh
          args:
          - pipelines-repo/scripts/fetch-bosh-releases-from-manifest.sh
          - cf-deployment
          - pipelines-repo/scripts/ops_files
          - releases
          - stemcells
    - task: transfer-cf-releases
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: releases
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - releases
          - /data/repo/bosh/release
    - task: transfer-cf-stemcells
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: stemcells
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - stemcells
          - /data/repo/bosh/stemcell
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new CF Deployment release
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new CF Deployment release
- name: fetch-cf-mgmt-cli
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: cf-mgmt-release
      trigger: true
      params:
        globs:
        - "*-linux"
    - task: process-cf-mgmt-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-mgmt-release
        outputs:
        - name: cf-mgmt-cli
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - cf-mgmt-release
          - cf-mgmt-cli
          - cf-mgmt
          - true
    - task: transfer-cf-mgmt-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: cf-mgmt-cli
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - cf-mgmt-cli
          - /data/repo/bosh
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new CF-MGMT CLI release
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new CF-MGMT CLI release
- name: fetch-cf-cli
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: cf-cli-release
      trigger: true
    - task: process-cf-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-cli-release
        outputs:
        - name: cf-cli
        run:
          path: pipelines-repo/scripts/process-cf-cli.sh
          args:
          - cf-cli-release
          - cf-cli
    - task: transfer-cf-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: cf-cli
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - cf-cli
          - /data/repo/cf_cli
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new CF CLI release
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new CF CLI release
- name: fetch-antifreeze-plugin
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: antifreeze-release
      trigger: true
      params:
        globs:
          - antifreeze-linux
          - antifreeze.exe
    - task: process-antifreeze-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: antifreeze-release
        outputs:
        - name: antifreeze-plugin
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - antifreeze-release
          - antifreeze-plugin
          - antifreeze
          - true
    - task: transfer-antifreeze-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: antifreeze-plugin
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - antifreeze-plugin
          - /data/repo/cf_cli/plugins
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new Antifreeze CF CLI Plugin release
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new Antifreeze CF CLI Plugin release
- name: fetch-autopilot-plugin
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: autopilot-release
      trigger: true
      params:
        globs:
          - autopilot-linux
          - autopilot.exe
    - task: process-autopilot-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: autopilot-release
        outputs:
        - name: autopilot-plugin
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - autopilot-release
          - autopilot-plugin
          - autopilot
          - true
    - task: transfer-autopilot-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: autopilot-plugin
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - autopilot-plugin
          - /data/repo/cf_cli/plugins
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new Autopilot CF CLI Plugin release
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new Autopilot CF CLI Plugin release
- name: fetch-cf-bpck-mngt-plugin
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: cf-bpck-mngt-release
      trigger: true
      params:
        globs:
          - cf-buildpack-management-plugin_linux_amd64
          - cf-buildpack-management-plugin_windows_amd64.exe
    - task: process-cf-bpck-mngt-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-bpck-mngt-release
        outputs:
        - name: cf-bpck-mngt-plugin
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - cf-bpck-mngt-release
          - cf-bpck-mngt-plugin
          - cf-buildpack-management
          - true
    - task: transfer-cf-bpck-mngt-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: cf-bpck-mngt-plugin
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - cf-bpck-mngt-plugin
          - /data/repo/cf_cli/plugins
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new Buildpack Management CF CLI Plugin release
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new Buildpack Management CF CLI Plugin release
- name: fetch-cf-top-plugin
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: cf-top-release
      trigger: true
      params:
        globs:
          - top-plugin-linux64
          - top-plugin64.exe
    - task: process-cf-top-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-top-release
        outputs:
        - name: cf-top-plugin
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - cf-top-release
          - cf-top-plugin
          - top
          - true
    - task: transfer-cf-top-plugin
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: trecnoc/concourse-rsync}
        inputs:
        - name: pipelines-repo
        - name: cf-top-plugin
        run:
          path: pipelines-repo/scripts/rsync.sh
          args:
          - ((rsync_server))
          - ((rsync_user))
          - ((rsync_key_base64))
          - cf-top-plugin
          - /data/repo/cf_cli/plugins
    on_failure:
      put: notify
      params:
        icon_emoji: ":skull_and_crossbones:"
        text: Failed to process new CF Top CF CLI Plugin release
    on_success:
      put: notify
      params:
        icon_emoji: ":thumbsup:"
        text: Successfully processed new CF Top CF CLI Plugin release