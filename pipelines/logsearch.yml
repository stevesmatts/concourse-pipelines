---
resource_types:
  - name: slack-notifier
    type: docker-image
    source:
      repository: mockersf/concourse-slack-notifier
  - name: rsync
    type: docker-image
    source:
      repository: trecnoc/rsync-resource

resources:
  - name: pipeline-tasks
    type: git
    source:
      uri: https://github.com/trecnoc/concourse-pipelines-tasks.git
      branch: master
  - name: logsearch-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry-community/logsearch-boshrelease.git
      tag_filter: v*
  - name: logsearch-plugins-repo
    type: git
    source:
      uri: https://github.com/trecnoc/logsearch-plugins-release.git
      tag_filter: v*
      username: ((github_access_token))
      password: x-oauth-basic
  - name: logsearch-plugins-release
    type: github-release
    source:
      owner: trecnoc
      repository: logsearch-plugins-release
      access_token: ((github_access_token))
  - name: mirror
    type: rsync
    source:
      server: ((rsync_server))
      username: ((rsync_user))
      private_key: ((rsync_key))
      base_dir: /data/repo/bosh/release
  - name: notify
    type: slack-notifier
    source:
      url: ((slack_hook))
      disabled: ((slack_disabled))

jobs:
  - name: mirror-logsearch-releases
    build_log_retention:
      days: 7
      minimum_succeeded_builds: 1
    plan:
      - in_parallel:
          - get: pipeline-tasks
          - get: logsearch-deployment
            trigger: true
      - task: generate-manifest
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: starkandwayne/concourse
          inputs:
            - name: logsearch-deployment
          outputs:
            - name: manifest
          run:
            path: /bin/bash
            args:
              - -c
              - |
                set -e
                set -o pipefail

                printf "Generating manifest for Logsearch Bosh deployment version %s\n" $(cat logsearch-deployment/.git/ref)
                printf "Excluding BPM and Routing releases"

                cat << EOF > remove-unnecessary-releases.yml
                ---
                - type: remove
                  path: /releases/name=bpm?
                - type: remove
                  path: /releases/name=routing?
                EOF

                bosh int logsearch-deployment/deployment/logsearch-deployment.yml \
                  -o logsearch-deployment/deployment/operations/cloudfoundry.yml \
                  -o remove-unnecessary-releases.yml > manifest/manifest.yml
      - task: download-releases
        file: pipeline-tasks/download-releases-from-manifest.yml
      - put: mirror
        params:
          sub_dir: releases
      - task: generate-notification
        file: pipeline-tasks/generate-mirrored-notification.yml
        input_mapping:
          content-input: logsearch-deployment
        params:
          INPUT_TYPE: generic
          LABEL: "logsearch deployment"
    on_success:
      put: notify
      params:
        alert_type: success
        mode: concise
        message_file: notification/message.txt
    on_failure:
      put: notify
      params:
        alert_type: failed
        mode: normal
  - name: build-logsearch-plugins-release
    build_log_retention:
      days: 7
      minimum_succeeded_builds: 1
    plan:
      - in_parallel:
          - get: pipeline-tasks
          - get: logsearch-plugins-repo
            trigger: true
      - task: build-release
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: starkandwayne/concourse
          inputs:
            - name: logsearch-plugins-repo
          outputs:
            - name: release
            - name: info
          run:
            path: /bin/bash
            args:
              - -c
              - |
                set -e
                set -o pipefail

                version=$(cat logsearch-plugins-repo/version)

                printf "Building logsearch-plugins-release for version v%s\n" ${version}

                pushd logsearch-plugins-repo >/dev/null

                bosh create-release --final --version="${version}" --tarball ../release/logsearch-plugins-release-${version}.tgz
                cp release-notes.md ../release/logsearch-plugins-release-${version}.md

                popd >/dev/null

                echo v${version} > info/release_tag.txt

                cat << EOF > info/notification.txt
                Successfully built and mirrored version ${version} of the logsearch-plugins bosh release
                EOF
      - put: logsearch-plugins-release
        params:
          name: info/release_tag.txt
          tag: info/release_tag.txt
          body: logsearch-plugins-repo/release-notes.md
          globs:
            - release/logsearch-plugins-release-*.tgz
      - put: mirror
        params:
          sub_dir: release
    on_success:
      put: notify
      params:
        alert_type: success
        mode: concise
        message_file: info/notification.txt
    on_failure:
      put: notify
      params:
        alert_type: failed
        mode: normal
