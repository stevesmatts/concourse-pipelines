---
resource_types:
- name: rsync-resource
  type: docker-image
  source:
    repository: mrsixw/concourse-rsync-resource
    tag: latest
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: pipelines-repo
  type: git
  source:
    uri: https://github.com/trecnoc/concourse-pipelines.git
    branch: master
- name: bosh-cli-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-cli
    access_token: ((github_access_token))
- name: transfer-bosh-cli
  type: rsync-resource
  source:
    server: ((rsync_server))
    base_dir: /data/repo/bosh
    user : ((rsync_user))
    private_key: ((rsync_key))
    disable_version_path: true
- name: cf-cli-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: cli
    access_token: ((github_access_token))
- name: transfer-cf-cli
  type: rsync-resource
  source:
    server: ((rsync_server))
    base_dir: /data/repo/cf_cli
    user : ((rsync_user))
    private_key: ((rsync_key))
    disable_version_path: true
- name: credhub-cli-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: credhub-cli
    access_token: ((github_access_token))
- name: transfer-credhub-cli
  type: rsync-resource
  source:
    server: ((rsync_server))
    base_dir: /data/repo/bosh/credhub
    user : ((rsync_user))
    private_key: ((rsync_key))
    disable_version_path: true
- name: bbr-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github_access_token))
- name: transfer-bbr
  type: rsync-resource
  source:
    server: ((rsync_server))
    base_dir: /data/repo/bosh/bbr
    user : ((rsync_user))
    private_key: ((rsync_key))
    disable_version_path: true
- name: mc-release
  type: github-release
  source:
    owner: minio
    repository: mc
    access_token: ((github_access_token))
- name: transfer-mc
  type: rsync-resource
  source:
    server: ((rsync_server))
    base_dir: /data/repo/minio
    user : ((rsync_user))
    private_key: ((rsync_key))
    disable_version_path: true
- name: cf-mgmt-release
  type: github-release
  source:
    owner: pivotalservices
    repository: cf-mgmt
    access_token: ((github_access_token))
- name: transfer-cf-mgmt
  type: rsync-resource
  source:
    server: ((rsync_server))
    base_dir: /data/repo/bosh/cf-mgmt
    user : ((rsync_user))
    private_key: ((rsync_key))
    disable_version_path: true
- name: notify
  type: slack-notification
  source:
    url: ((slack_hook))
    disable: ((slack_disabled))

jobs:
- name: fetch-tools
  public: true
  build_logs_to_retain: 1
  plan:
  - do:
    - get: pipelines-repo
    - get: bosh-cli-release
      trigger: true
      params:
        globs:
        - "bosh-cli-*-linux-amd64"
    - get: cf-cli-release
      trigger: true
    - get: credhub-cli-release
      trigger: true
      params:
        globs:
        - "credhub-linux-*.tgz"
    - get: bbr-release
      trigger: true
      params:
        globs:
        - "bbr-*.tar"
    - get: mc-release
      trigger: true
    - get: cf-mgmt-release
      trigger: true
      params:
        globs:
        - "*-linux"
    - task: fetch-bosh-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: bosh-cli-release
          path: incoming-release
        outputs:
        - name: release
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - incoming-release
          - release
          - bosh-cli
    - put: transfer-bosh-cli
      params: {
        "sync_dir": "release",
        "rsync_opts": ["-Pav", "--ignore-existing"]
      }
    - task: fetch-cf-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-cli-release
          path: incoming-release
        outputs:
        - name: release
        run:
          path: pipelines-repo/scripts/fetch-cf-cli-release.sh
          args:
          - incoming-release
          - release
    - put: transfer-cf-cli
      params: {
        "sync_dir": "release",
        "rsync_opts": ["-Pav", "--ignore-existing"]
      }
    - task: fetch-credhub-cli
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: credhub-cli-release
          path: incoming-release
        outputs:
        - name: release
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - incoming-release
          - release
          - credhub
    - put: transfer-credhub-cli
      params: {
        "sync_dir": "release",
        "rsync_opts": ["-Pav", "--ignore-existing"]
      }
    - task: fetch-bbr
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: bbr-release
          path: incoming-release
        outputs:
        - name: release
        run:
          path: pipelines-repo/scripts/copy-github-release.sh
          args:
          - incoming-release
          - release
          - bbr
    - put: transfer-bbr
      params: {
        "sync_dir": "release",
        "rsync_opts": ["-Pav", "--ignore-existing"]
      }
    - task: fetch-mc
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: mc-release
          path: incoming-release
        outputs:
        - name: release
        run:
          path: pipelines-repo/scripts/fetch-mc-release.sh
          args:
          - incoming-release
          - release
    - put: transfer-mc
      params: {
        "sync_dir": "release",
        "rsync_opts": ["-Pav", "--ignore-existing"]
      }
    - task: fetch-cf-mgmt
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: starkandwayne/concourse}
        inputs:
        - name: pipelines-repo
        - name: cf-mgmt-release
          path: incoming-release
        outputs:
        - name: release
        run:
          path: pipelines-repo/scripts/copy-cf-mgmt-release.sh
          args:
          - incoming-release
          - release
    - put: transfer-cf-mgmt
      params: {
        "sync_dir": "release",
        "rsync_opts": ["-Pav", "--ignore-existing"]
      }
    on_failure:
      put: notify
      params:
        username: $BUILD_PIPELINE_NAME
        icon_emoji: ":skull_and_crossbones:"
        text: $BUILD_JOB_NAME job failed
    on_success:
      put: notify
      params:
        username: $BUILD_PIPELINE_NAME
        icon_emoji: ":thumbsup:"
        text: $BUILD_JOB_NAME job succeeded