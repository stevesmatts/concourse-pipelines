---
resource_types:
- name: slack-notifier
  type: registry-image
  source:
    repository: mockersf/concourse-slack-notifier
- name: rsync
  type: registry-image
  source:
    repository: trecnoc/rsync-resource

resources:
- name: pipeline-tasks
  type: git
  source:
    uri: https://github.com/trecnoc/concourse-pipelines-tasks.git
    branch: master
- name: minio-release
  type: bosh-io-release
  source:
    repository: minio/minio-boshrelease
- name: mc-release
  type: github-release
  source:
    owner: minio
    repository: mc
    access_token: ((github_access_token))
- name: release-mirror
  type: rsync
  source:
    server: ((rsync_server))
    username: ((rsync_user))
    private_key: ((rsync_key))
    base_dir: /data/repo/bosh/release
- name: cli-mirror
  type: rsync
  source:
    server: ((rsync_server))
    username: ((rsync_user))
    private_key: ((rsync_key))
    base_dir: /data/repo/minio
- name: notify
  type: slack-notifier
  source:
    url: ((slack_hook))
    disabled: ((slack_disabled))

jobs:
- name: mirror-minio-release
  build_log_retention:
    days: 7
    minimum_succeeded_builds: 1
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: minio-release
      trigger: true
  - task: rename-release
    file: pipeline-tasks/rename-bosh-io-release.yml
    input_mapping:
      release-input: minio-release
    params:
      CUSTOM_FILENAME_PREFIX: minio-boshrelease
  - put: release-mirror
    params:
      sub_dir: release-output
  - task: generate-notification
    file: pipeline-tasks/generate-mirrored-notification.yml
    input_mapping:
      content-input: minio-release
    params:
      INPUT_TYPE: bosh_io_release
  on_success:
    put: notify
    params:
      alert_type: success
      mode: concise
      message_file: notification/message.txt
  on_failure:
    put: notify
    params:
      alert_type: failed
      mode: normal
- name: mirror-minio-cli
  build_log_retention:
    days: 7
    minimum_succeeded_builds: 1
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: mc-release
      trigger: true
  - task: download-cli
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: starkandwayne/concourse
      inputs:
      - name: mc-release
      outputs:
      - name: mc-cli
      run:
        path: /bin/bash
        args:
        - -c
        - |
          set -e
          set -o pipefail

          GITHUB_RELEASE=mc-release
          CLI_OUTPUT=mc-cli

          MC_CLI_LINUX_URL="https://dl.minio.io/client/mc/release/linux-amd64/mc"
          MC_CLI_WIN_URL="https://dl.minio.io/client/mc/release/windows-amd64/mc.exe"

          VERSION=$(cat ${GITHUB_RELEASE}/version)
          mkdir -p ${CLI_OUTPUT}/${VERSION}

          printf "Downloading MC CLI client for version '%s'\n\n" ${VERSION}

          printf "Linux client\n"
          curl --progress-bar --retry 5 -Lo ${CLI_OUTPUT}/${VERSION}/mc ${MC_CLI_LINUX_URL}
          printf "Windows client\n"
          curl --progress-bar --retry 5 -Lo ${CLI_OUTPUT}/${VERSION}/mc.exe ${MC_CLI_WIN_URL}

          if [[ -f ${GITHUB_RELEASE}/body ]]; then
            printf "Adding MC CLI release notes\n"
            cp ${GITHUB_RELEASE}/body ${CLI_OUTPUT}/${VERSION}/release.md
          fi
  - put: cli-mirror
    params:
      sub_dir: mc-cli
  - task: generate-notification
    file: pipeline-tasks/generate-mirrored-notification.yml
    input_mapping:
      content-input: mc-release
    params:
      INPUT_TYPE: generic
      LABEL: "minio cli"
  on_success:
    put: notify
    params:
      alert_type: success
      mode: concise
      message_file: notification/message.txt
  on_failure:
    put: notify
    params:
      alert_type: failed
      mode: normal
